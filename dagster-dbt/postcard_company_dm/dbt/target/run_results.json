{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2023-12-14T10:35:09.374103Z", "invocation_id": "9484fa96-2c83-463c-9fc5-fad37fdf4c21", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:38.557745Z", "completed_at": "2023-12-14T10:34:38.582888Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:38.585634Z", "completed_at": "2023-12-14T10:34:39.000972Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.499859094619751, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_date", "compiled": true, "compiled_code": "-- https://gist.github.com/adityawarmanfw/0612333605d351f2f1fe5c87e1af20d2\n\n\n\nWITH generate_date AS (\n        SELECT CAST(RANGE AS DATE) AS date_value \n          FROM RANGE(DATE '2015-01-01', DATE '2030-12-31', INTERVAL 1 DAY)\n          )\n   SELECT \n   \n          strftime(date_value, '%Y%m%d')::int AS date_key,\n          date_value,\n          DAYOFYEAR(date_value) AS day_of_year, \n          YEARWEEK(date_value) AS week_key,\n          WEEKOFYEAR(date_value) AS week_of_year,\n          DAYOFWEEK(date_value) AS day_of_week,\n          ISODOW(date_value) AS iso_day_of_week,\n          DAYNAME(date_value) AS day_name,\n          DATE_TRUNC('week', date_value) AS first_day_of_week,\n          DATE_TRUNC('week', date_value) + 6 AS last_day_of_week,\n          YEAR(date_value) || RIGHT('0' || MONTH(date_value), 2) AS month_key,\n          MONTH(date_value) AS month_of_year,\n          DAYOFMONTH(date_value) AS day_of_month,\n          LEFT(MONTHNAME(date_value), 3) AS month_name_short,\n          MONTHNAME(date_value) AS month_name,\n          DATE_TRUNC('month', date_value) AS first_day_of_month,\n          LAST_DAY(date_value) AS last_day_of_month,\n          CAST(YEAR(date_value) || QUARTER(date_value) AS INT) AS quarter_key,\n          QUARTER(date_value) AS quarter_of_year,\n          CAST(date_value - DATE_TRUNC('Quarter', date_value) + 1 AS INT) AS day_of_quarter,\n          ('Q' || QUARTER(date_value)) AS quarter_desc_short,\n          ('Quarter ' || QUARTER(date_value)) AS quarter_desc,\n          DATE_TRUNC('quarter', date_value) AS first_day_of_quarter,\n          LAST_DAY(DATE_TRUNC('quarter', date_value) + INTERVAL 2 MONTH) as last_day_of_quarter,\n          CAST(YEAR(date_value) AS INT) AS year_key,\n          DATE_TRUNC('Year', date_value) AS first_day_of_year,\n          DATE_TRUNC('Year', date_value) - 1 + INTERVAL 1 YEAR AS last_day_of_year,\n          ROW_NUMBER() OVER (PARTITION BY YEAR(date_value), MONTH(date_value), DAYOFWEEK(date_value) ORDER BY date_value) AS ordinal_weekday_of_month\n     FROM generate_date", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_date\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:39.063080Z", "completed_at": "2023-12-14T10:34:39.067660Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:39.068977Z", "completed_at": "2023-12-14T10:34:39.343289Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.33645033836364746, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_channels", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp FROM postgres_scan('postgresql://postgres:postgres@oltp:5432/sales_oltp','public', 'channels')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_channels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:39.403066Z", "completed_at": "2023-12-14T10:34:39.407499Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:39.420536Z", "completed_at": "2023-12-14T10:34:39.834336Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5618770122528076, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_customers", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp FROM postgres_scan('postgresql://postgres:postgres@oltp:5432/sales_oltp','public', 'customers')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:39.971536Z", "completed_at": "2023-12-14T10:34:39.976171Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:39.977648Z", "completed_at": "2023-12-14T10:34:40.263767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3682725429534912, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_products", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp FROM postgres_scan('postgresql://postgres:postgres@oltp:5432/sales_oltp','public', 'products')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_products\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:40.345757Z", "completed_at": "2023-12-14T10:34:40.352534Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:40.353893Z", "completed_at": "2023-12-14T10:34:40.632722Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.34206676483154297, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_resellers", "compiled": true, "compiled_code": "\n\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp FROM postgres_scan('postgresql://postgres:postgres@oltp:5432/sales_oltp','public', 'resellers')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_resellers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:40.694753Z", "completed_at": "2023-12-14T10:34:40.701901Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:40.704042Z", "completed_at": "2023-12-14T10:34:49.373060Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 8.97710657119751, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_resellers_csv", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp\n\nFROM read_csv('/shared/csv/DailySales_*.csv', auto_detect=True)", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_resellers_csv\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:49.677125Z", "completed_at": "2023-12-14T10:34:49.681627Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:49.683069Z", "completed_at": "2023-12-14T10:34:50.991700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.5306575298309326, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_resellers_json", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp\n\nFROM read_json('/shared/json/rawDailySales_*.json', auto_detect=True, format='array')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_resellers_json\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:51.213877Z", "completed_at": "2023-12-14T10:34:51.219850Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:51.221123Z", "completed_at": "2023-12-14T10:34:53.250363Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.121445894241333, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.raw_transactions", "compiled": true, "compiled_code": "\nSELECT *, CURRENT_TIMESTAMP AS loaded_timestamp FROM postgres_scan('postgresql://postgres:postgres@oltp:5432/sales_oltp','public', 'transactions')", "relation_name": "\"datamart\".\"postcard_company_raw\".\"raw_transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:53.341015Z", "completed_at": "2023-12-14T10:34:53.341020Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:53.342415Z", "completed_at": "2023-12-14T10:34:53.666975Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3956584930419922, "adapter_response": {"_message": "INSERT 100", "code": "INSERT", "rows_affected": 100}, "message": "INSERT 100", "failures": null, "unique_id": "seed.postcard_company.geography", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:53.742748Z", "completed_at": "2023-12-14T10:34:53.747323Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:53.748693Z", "completed_at": "2023-12-14T10:34:54.007953Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32675719261169434, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_channels", "compiled": true, "compiled_code": "\nwith staging_channels as (\nselect channel_id, channel_name\nfrom \"datamart\".\"postcard_company_raw\".\"raw_channels\"\n)\nselect channel_id as channel_key, channel_id as original_channel_id, channel_name\nfrom staging_channels", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_channels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:54.073678Z", "completed_at": "2023-12-14T10:34:54.079547Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:54.081529Z", "completed_at": "2023-12-14T10:34:54.338652Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3237040042877197, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_resellers", "compiled": true, "compiled_code": "\n\n\nwith resellers as (\n\nSELECT reseller_id, reseller_name, commission_pct, row_number() over (partition by reseller_id order by loaded_timestamp desc ) as rn \nfrom \"datamart\".\"postcard_company_raw\".\"raw_resellers\"\n\n)\nselect reseller_id, reseller_name, commission_pct\n\nfrom resellers\n\nwhere rn = 1", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_resellers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:54.402343Z", "completed_at": "2023-12-14T10:34:54.408585Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:54.409889Z", "completed_at": "2023-12-14T10:34:54.672927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.34197497367858887, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_geography", "compiled": true, "compiled_code": "\n\nSELECT\n      id AS geography_key,\n      cityname as city_name,\n      countryname as country_name,\n      regionname as region_name\nFROM\n      \"datamart\".\"postcard_company_raw\".\"geography\"", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_geography\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:54.750171Z", "completed_at": "2023-12-14T10:34:54.754976Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:54.756341Z", "completed_at": "2023-12-14T10:34:55.115391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4249253273010254, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_products", "compiled": true, "compiled_code": "\nwith products as (\n\n    SELECT  \n\n        id AS product_id, \n        name AS product_name, \n        g.id as geography_key, REPLACE(price,'$','')::NUMERIC AS product_price, \n        row_number() over (partition by product_id order by e.loaded_timestamp desc ) as rn \n\n    from \"datamart\".\"postcard_company_raw\".\"raw_products\" e\n    join \"datamart\".\"postcard_company_raw\".\"geography\" g on g.cityname = e.city\n\n)\n\nselect product_id, product_name, geography_key, product_price\n\nfrom products\n\nwhere rn = 1", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_products\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:55.181881Z", "completed_at": "2023-12-14T10:34:55.189685Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:55.191123Z", "completed_at": "2023-12-14T10:34:55.453687Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3182792663574219, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_channel", "compiled": true, "compiled_code": "\n\n\nselect channel_key, original_channel_id, channel_name\nfrom \"datamart\".\"postcard_company_staging\".\"staging_channels\"", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_channel\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:55.505307Z", "completed_at": "2023-12-14T10:34:55.510223Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:55.511540Z", "completed_at": "2023-12-14T10:34:55.775996Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3267548084259033, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_salesagent", "compiled": true, "compiled_code": "\n\n\nSELECT\n    reseller_id AS sales_agent_key,\n    reseller_id AS original_reseller_id,\n    reseller_name,\n    commission_pct\nFROM\n    \"datamart\".\"postcard_company_staging\".\"staging_resellers\"\nUNION ALL\nSELECT\n    0 AS sales_agent_key,\n    NULL AS original_reseller_id,\n    'Direct Sales' AS reseller_name,\n    NULL AS commission_pct", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_salesagent\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:55.835941Z", "completed_at": "2023-12-14T10:34:55.840426Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:55.841722Z", "completed_at": "2023-12-14T10:34:56.134876Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3631265163421631, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_product", "compiled": true, "compiled_code": "\n\n\nselect product_id as product_key, product_id as original_product_id, product_name, geography_key , product_price\n\n\nFROM \"datamart\".\"postcard_company_staging\".\"staging_products\"", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:56.204580Z", "completed_at": "2023-12-14T10:34:56.228042Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:56.229396Z", "completed_at": "2023-12-14T10:34:57.438571Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.27872896194458, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_customers", "compiled": true, "compiled_code": "\nWITH \n\ncustomers_main AS (\n\n    SELECT \n    \n    customer_id, \n    first_name, \n    last_name, \n    email \n    \n    \n    FROM \"datamart\".\"postcard_company_raw\".\"raw_customers\"\n\n),\n\ncustomers_csv  AS (\n\n    SELECT  \n    \n    \"customer first name\" as customer_first_name, \n    \"customer last name\" as customer_last_name ,\n    \"customer email\" as customer_email,\n    \"reseller id\"::int AS reseller_id,\n    \"transaction id\" AS transaction_id\n\n    FROM \"datamart\".\"postcard_company_raw\".\"raw_resellers_csv\"\n)\n,\n\ncustomers_json AS (\n\n\n    SELECT \n    customer.firstname AS customer_first_name, \n    customer.lastname AS customer_last_name, \n    customer.email AS customer_email,\n    \"reseller-id\" AS reseller_id,\n    transactionId AS transaction_id\n    \n    FROM \"datamart\".\"postcard_company_raw\".\"raw_resellers_json\"\n), \n\ncustomers AS (\n\n\nselect reseller_id, transaction_id as customer_id , customer_first_name, customer_last_name, customer_email  from customers_csv\n\nunion \n\nselect reseller_id, transaction_id as customer_id, customer_first_name, customer_last_name, customer_email  from customers_json\n\nunion\n\nselect 0 as reseller_id, customer_id, first_name, last_name, email  from customers_main\n)\n\nselect \n\n  \n    \nmd5(cast(coalesce(cast(c.reseller_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n \n customer_first_name, \n customer_last_name, \n customer_email, \n s.sales_agent_key\n\nfrom customers c\nleft join \"datamart\".\"postcard_company_core\".\"dim_salesagent\" s on c.reseller_id = s.original_reseller_id", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:57.497208Z", "completed_at": "2023-12-14T10:34:57.504740Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:57.506862Z", "completed_at": "2023-12-14T10:34:58.383019Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9217114448547363, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.dim_customer", "compiled": true, "compiled_code": "\n\nselect customer_key, customer_first_name, customer_last_name, customer_email, sales_agent_key\nfrom \"datamart\".\"postcard_company_staging\".\"staging_customers\"", "relation_name": "\"datamart\".\"postcard_company_core\".\"dim_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:34:58.425529Z", "completed_at": "2023-12-14T10:34:58.438323Z"}, {"name": "execute", "started_at": "2023-12-14T10:34:58.439958Z", "completed_at": "2023-12-14T10:35:00.158649Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7537238597869873, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_transactions_main", "compiled": true, "compiled_code": "\n\nWITH \n\n  \n\nlatest_transaction as (\n\nselect max(loaded_timestamp) as max_transaction  from \"datamart\".\"postcard_company_staging\".\"staging_transactions_main\"\n\n),\n\n\n  \n\ntrans_main AS (\n  SELECT\n    \n    \nmd5(cast(coalesce(cast(0 as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS customer_key,\n    customer_id,\n    transaction_id,\n    product_id,\n    amount,\n    qty,\n    channel_id,\n    bought_date,\n    loaded_timestamp\n  FROM\n    \"datamart\".\"postcard_company_raw\".\"raw_transactions\"\n\n  \n\n  -- this filter will only be applied on an incremental run\n  where loaded_timestamp > (SELECT max_transaction from latest_transaction LIMIT 1)\n\n  \n\n\n\n)\n\n\nSELECT\n  t.customer_key,\n  transaction_id,\n  e.product_key,\n  C.channel_key,\n  0 AS reseller_id,\n  strftime('%Y%m%d', bought_date)::INTEGER AS bought_date_key,\n  REPLACE(amount,'$','')::numeric AS total_amount,\n  qty,\n  e.product_price,\n  e.geography_key,\n  NULL::numeric AS commissionpaid,\n  NULL::numeric AS commissionpct,\n  loaded_timestamp\n\n\nFROM\n  trans_main t\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_product\"\n  e\n  ON t.product_id = e.product_key\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_channel\" C\n  ON t.channel_id = C.channel_key\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_customer\"\n  cu\n  ON t.customer_key = cu.customer_key", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_transactions_main\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:35:00.184956Z", "completed_at": "2023-12-14T10:35:00.193761Z"}, {"name": "execute", "started_at": "2023-12-14T10:35:00.195181Z", "completed_at": "2023-12-14T10:35:00.896543Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9356932640075684, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_transactions_resellers_csv", "compiled": true, "compiled_code": "\n\n\nWITH \n\n\n\nlatest_transaction as (\n    \nselect max(loaded_timestamp) as max_transaction  from \"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_csv\"\n\n),\n\n  \n\n\n\nresellers_csv AS (\n  SELECT\n    \"reseller id\" :: INT AS reseller_id,\n    \"Transaction ID\" AS  transaction_id,\n    \"Product name\" AS product_name,\n    \"Total amount\" AS total_amount,\n    \"Quantity\" AS number_of_purchased_postcards,\n    \"Created Date\" AS created_date,\n    \"Series City\" AS office_location,\n    \"Sales Channel\" AS sales_channel,\n    loaded_timestamp\n  FROM\n    \"datamart\".\"postcard_company_raw\".\"raw_resellers_csv\"\n\n      \n\n  -- this filter will only be applied on an incremental run\n  where loaded_timestamp > (SELECT max_transaction from latest_transaction LIMIT 1)\n\n  \n\n\n\n),\ntrans_csv AS (\n  SELECT\n    \n    \nmd5(cast(coalesce(cast(reseller_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS customer_key,\n    transaction_id,\n    reseller_id,\n    product_name,\n    total_amount,\n    number_of_purchased_postcards,\n    created_date,\n    office_location,\n    sales_channel,\n    loaded_timestamp\n  FROM\n    resellers_csv\n)\n\n\nSELECT\n  t.customer_key,\n  transaction_id,\n  product_key,\n  channel_key,\n  t.reseller_id,\n  strftime('%Y%m%d', created_date)::INTEGER AS bought_date_key,\n  total_amount::numeric,\n  number_of_purchased_postcards,\n  e.product_price::numeric,\n  e.geography_key,\n  s.commission_pct * total_amount::numeric AS commisionpaid,\n  s.commission_pct AS commission_pct,\n  loaded_timestamp\nFROM\n  trans_csv t\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_product\"\n  e\n  ON t.product_name = e.product_name\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_channel\" C\n  ON t.sales_channel = C.channel_name\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_customer\"\n  cu\n  ON t.customer_key = cu.customer_key\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_salesagent\"\n  s\n  ON t.reseller_id = s.original_reseller_id", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_csv\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:35:01.133742Z", "completed_at": "2023-12-14T10:35:01.148772Z"}, {"name": "execute", "started_at": "2023-12-14T10:35:01.151000Z", "completed_at": "2023-12-14T10:35:01.569619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4468874931335449, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_transactions_resellers_json", "compiled": true, "compiled_code": "\n\nWITH \n\n  \n\nlatest_transaction as (\n    \nselect max(loaded_timestamp) as max_transaction  from \"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_json\"\n\n),\n\n\n  \n\ntrans_json AS (\n  SELECT\n    \n    \nmd5(cast(coalesce(cast('reseller-id' as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transactionId as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS customer_key,\n    \"reseller-id\" AS reseller_id,\n    transactionId AS transaction_id,\n    productName AS product_name,\n    totalAmount AS total_amount,\n    qty AS no_purchased_postcards,\n    \"date\" AS bought_date,\n    salesChannel AS sales_channel,\n    seriesCity AS office_location,\n    loaded_timestamp\n  FROM\n    \"datamart\".\"postcard_company_raw\".\"raw_resellers_json\"\n\n\n  \n\n  -- this filter will only be applied on an incremental run\n  where loaded_timestamp > (SELECT max_transaction from latest_transaction LIMIT 1)\n\n  \n\n\n\n)\n\n\nSELECT\n  t.customer_key,\n  transaction_id,\n  e.product_key,\n  C.channel_key,\n  t.reseller_id,\n  bought_date AS bought_date_key,\n  total_amount::numeric,\n  no_purchased_postcards,\n  e.product_price::numeric,\n  e.geography_key,\n  s.commission_pct * total_amount::numeric AS commisionpaid,\n  s.commission_pct,\n  loaded_timestamp\nFROM\n  trans_json t\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_product\"\n  e\n  ON t.product_name = e.product_name\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_channel\" C\n  ON t.sales_channel = C.channel_name\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_customer\"\n  cu\n  ON t.customer_key = cu.customer_key\n  JOIN \"datamart\".\"postcard_company_core\".\"dim_salesagent\"\n  s\n  ON t.reseller_id = s.original_reseller_id", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_json\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:35:01.590026Z", "completed_at": "2023-12-14T10:35:01.597572Z"}, {"name": "execute", "started_at": "2023-12-14T10:35:01.599813Z", "completed_at": "2023-12-14T10:35:05.559131Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.006414413452148, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.staging_transactions", "compiled": true, "compiled_code": "\n\n\nSELECT * FROM \"datamart\".\"postcard_company_staging\".\"staging_transactions_main\"\n\nUNION ALL\n\nSELECT * FROM \"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_csv\"\n\nUNION ALL\n\nSELECT * FROM \"datamart\".\"postcard_company_staging\".\"staging_transactions_resellers_json\"", "relation_name": "\"datamart\".\"postcard_company_staging\".\"staging_transactions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-14T10:35:05.602548Z", "completed_at": "2023-12-14T10:35:05.607540Z"}, {"name": "execute", "started_at": "2023-12-14T10:35:05.608861Z", "completed_at": "2023-12-14T10:35:08.840365Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.2811152935028076, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.postcard_company.fact_sales", "compiled": true, "compiled_code": "\n\nSELECT\n    customer_key,\n    transaction_id,\n    product_key,\n    channel_key,\n    reseller_id,\n    bought_date_key,\n    geography_key,\n    total_amount,\n    qty,\n    commissionpct,\n    commissionpaid,\n    product_price\nFROM\n    \"datamart\".\"postcard_company_staging\".\"staging_transactions\"", "relation_name": "\"datamart\".\"postcard_company_core\".\"fact_sales\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-12-14T10:35:08.889975Z", "completed_at": "2023-12-14T10:35:08.894277Z"}, {"name": "execute", "started_at": "2023-12-14T10:35:08.895616Z", "completed_at": "2023-12-14T10:35:09.138965Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2586517333984375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.postcard_company.total_amount_is_non_negative", "compiled": true, "compiled_code": "select * from \"datamart\".\"postcard_company_core\".\"fact_sales\"\n\nwhere total_amount <= 0.00", "relation_name": null}], "elapsed_time": 33.7725305557251, "args": {"log_format": "json", "quiet": false, "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "populate_cache": true, "show_resource_report": false, "partial_parse": true, "select": ["fqn:*"], "indirect_selection": "eager", "which": "build", "partial_parse_file_diff": true, "use_colors_file": true, "project_dir": "/dagster-dbt/postcard_company_dm/postcard_company_dm/../dbt", "version_check": true, "strict_mode": false, "cache_selected_only": false, "vars": {}, "send_anonymous_usage_stats": true, "static_parser": true, "enable_legacy_logger": false, "write_json": true, "log_level": "info", "log_file_max_bytes": 10485760, "show": false, "include_saved_query": false, "introspect": true, "print": true, "resource_types": [], "printer_width": 80, "favor_state": false, "use_colors": false, "defer": false, "macro_debugging": false, "log_format_file": "json", "log_level_file": "debug", "log_path": "/dagster-dbt/postcard_company_dm/postcard_company_dm/../dbt/logs", "invocation_command": "dbt --no-use-colors --log-format json build --project-dir /dagster-dbt/postcard_company_dm/postcard_company_dm/../dbt --profiles-dir /dagster-dbt/postcard_company_dm/postcard_company_dm/../dbt/config --select fqn:*", "profiles_dir": "/dagster-dbt/postcard_company_dm/postcard_company_dm/../dbt/config"}}